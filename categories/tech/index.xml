<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on Skwings Blog</title>
    <link>https://skwings.github.io/categories/tech/</link>
    <description>Recent content in Tech on Skwings Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 16 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://skwings.github.io/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Flex布局详解</title>
      <link>https://skwings.github.io/post/2019-10-18flex%E5%B8%83%E5%B1%80%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://skwings.github.io/post/2019-10-18flex%E5%B8%83%E5%B1%80%E8%AF%A6%E8%A7%A3/</guid>
      <description>Flex布局是什么？ flex是 flexible Box 的缩写，意为“弹性布局”，用来为盒状模型提供最大的灵活性。flex属性可以继承。 1. 任何一个容器都可以指定为</description>
    </item>
    
    <item>
      <title>箭头函数使用总结</title>
      <link>https://skwings.github.io/post/2019-10-15-%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://skwings.github.io/post/2019-10-15-%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</guid>
      <description>箭头函数 原生代码改写成使用箭头函数 let sum=(n,m)=&amp;gt;{ retrun n+m; } //改写 let sum=(n,m)=&amp;gt;n+m;//当函数体只有一行return时，可以省略大括号</description>
    </item>
    
    <item>
      <title>Flex</title>
      <link>https://skwings.github.io/post/2019-10-16-js%E4%B8%AD%E7%9A%84math%E5%B8%B8%E7%94%A8%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://skwings.github.io/post/2019-10-16-js%E4%B8%AD%E7%9A%84math%E5%B8%B8%E7%94%A8%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>一、Math 数学函数：但是他不是一个函数，他是一个对象，对象中存储了许多的属性方法，所以被称为数学函数。 typeof math //=&amp;gt; object; Math是一个对象 Math = { ... /</description>
    </item>
    
    <item>
      <title>apply与call的区别？</title>
      <link>https://skwings.github.io/post/2019-10-17-call%E4%B8%8Eapply%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Tue, 04 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://skwings.github.io/post/2019-10-17-call%E4%B8%8Eapply%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>区别？ call的性能要比apply好一些（尤其是传递给函数的参数超过三个的时候），所以后期开发的时候，可以使用call多一点。 fuction.call(obj,10,20,30); functi</description>
    </item>
    
    <item>
      <title>Markdown</title>
      <link>https://skwings.github.io/post/2019-10-11-markdown/</link>
      <pubDate>Sat, 04 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://skwings.github.io/post/2019-10-11-markdown/</guid>
      <description>Markdown的超简短语法简介 标题 Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有</description>
    </item>
    
  </channel>
</rss>